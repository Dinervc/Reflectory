<!DOCTYPE html>
<html>
  <head>
    <title>Reflectory</title>
    <link rel="stylesheet" type="text/css" href="/css/style.css" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  </head>
  <body>
    <button onclick="showPopup()" id="phB">?</button>

    <div id="myModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <p>
          Welcome to Reflectory! ðŸ§ ðŸ’¡<br /><br />

          Hello there! I'm delighted you've landed here. Reflectory is an
          application I've created that leverages the advanced artificial
          intelligence technology to foster mental health improvement. It's a
          project I'm proud to have developed for the Hack United hackathon in
          2023.<br /><br />

          Here's what Reflectory can offer you:<br /><br />

          - AI Analysis and Response: Utilizing the powerful GPT-3 model from
          OpenAI, the system understands and responds to your sentiments in a
          personalized manner.<br />
          - Personalized Insights: Reflectory generates probing questions
          tailored for you, promoting self-reflection.<br />
          - Wellness Tips: Based on your input, it provides valuable advice to
          boost your mental wellness.<br />
          - Inspiring Quotes: To uplift your mood, Reflectory shares
          motivational quotes delivered by AI.<br /><br />

          You might wonder, "What happens to my data?"<br /><br />

          Your privacy is a priority here. Reflectory is crafted with a strong
          commitment to user privacy. I assure you that no data you share with
          the application is stored. You can interact with Reflectory freely,
          knowing your information remains private and confidential.<br /><br />

          Feel invited to embark on your self-reflection journey with
          Reflectory. Keep in mind, while this tool is designed to encourage
          self-reflection and mental well-being, it's not a replacement for
          professional mental health services.<br /><br />

          Thank you for choosing Reflectory. Now, let's begin your journey of
          reflection!
        </p>
      </div>
    </div>

    <div
      id="container"
      style="display: flex; flex-direction: column; height: 100vh"
    >
      <form
        action="/ask"
        method="POST"
        style="
          flex: 1;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
        "
      >
        <textarea
          name="prompt"
          placeholder="Describe your situation as precise as you wish..."
          style="
            resize: vertical;
            min-height: 30vh;
            width: 50vw;
            font-size: 1.2rem;
            border-radius: 10px;
          "
        ></textarea>
        <button
          type="submit"
          style="
            background-color: var(--warm-color);
            color: var(--text-color);
            border: none;
            padding: 0.5rem 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            width: 50vw;
          "
        >
          Ready?
        </button>
      </form>
    </div>
    <div style="height: 98vh; margin: auto">
      <% if (typeof danger !== 'undefined') { %>
      <div id="response" class="response" style="flex: 1; margin-bottom: 800px">
        <%= danger %>
      </div>
      <% } else { if (typeof thoughts !== 'undefined') { %>
      <div id="response" class="response" style="flex: 1">
        <h2>Analysis</h2>
        <%= thoughts %>
      </div>
      <% } if (typeof improvements !== 'undefined') { %>
      <div id="improvements" class="response" style="flex: 1">
        <h2>Tips on how to improve your situation</h2>
        <% for (let i = 0; i < improvements.length; i++) { %>
        <p><%= (i + 1) + '. ' + improvements[i] %></p>
        <% } %>
      </div>
      <div id="quotes" class="response" style="flex: 1">
        <h2>Stoic quote(s)</h2>
        <% for (let i = 0; i < quotes.length; i++) { %>
        <p><%= (i + 1) + '. ' + quotes[i] %></p>
        <% } %>
      </div>
      <% } } %>
    </div>
    <script>
      var modal = document.getElementById("myModal");

      var btn = document.getElementById("phB");

      var span = document.getElementsByClassName("close")[0];

      btn.onclick = function () {
        modal.style.display = "block";
      };

      span.onclick = function () {
        modal.style.display = "none";
      };

      window.onclick = function (event) {
        if (event.target == modal) {
          modal.style.display = "none";
        }
      };

      window.addEventListener(
        "input",
        function () {
          this.style.height = "auto";
          this.style.height = this.scrollHeight + "px";
        },
        false
      );

      window.onload = function () {
        var response = document.getElementById("response");
        if (response) {
          smoothScrollTo(response.offsetTop, 1000);
        }
        if (!response) {
          showPopup();
        }
      };

      function showPopup() {
        // defined the missing showPopup function
        modal.style.display = "block";
      }

      function smoothScrollTo(targetPosition, duration) {
        var startPosition = window.pageYOffset;
        var distance = targetPosition - startPosition;
        var startTime = null;

        function animation(currentTime) {
          if (startTime === null) startTime = currentTime;
          var timeElapsed = currentTime - startTime;
          var run = ease(timeElapsed, startPosition, distance, duration);
          window.scrollTo(0, run);
          if (timeElapsed < duration) requestAnimationFrame(animation);
        }

        function ease(t, b, c, d) {
          t /= d / 2;
          if (t < 1) return (c / 2) * t * t + b;
          t--;
          return (-c / 2) * (t * (t - 2) - 1) + b;
        }

        requestAnimationFrame(animation);
      }
    </script>
  </body>
</html>
